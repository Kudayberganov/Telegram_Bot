require("dotenv").config();
const { Telegraf, Markup } = require("telegraf");
const fs = require("fs");
const http = require("http");
const Movie = require("./models/Movie");

// –¢–æ–∫–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);





// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (—Ñ–∏–∫—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞)
const requiredChannels = ["@kino_905"]; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã

async function checkSubscription(ctx, userId) {
    for (let channel of requiredChannels) {
        try {
            const chatMember = await ctx.telegram.getChatMember(
                channel,
                userId
            );
            if (
                chatMember.status !== "member" &&
                chatMember.status !== "administrator" &&
                chatMember.status !== "creator"
            ) {
                return false; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            }
        } catch (error) {
            console.error(
                `–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª ${channel}:`,
                error.message
            );
            return false; // –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        }
    }
    return true; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
}


bot.start(async (ctx) => {
        const userId = ctx.from.id;
        const isSubscribed = await checkSubscription(ctx, userId);
    
        if (isSubscribed) {
            ctx.reply(
                "–ü—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–∞–Ω–∞–ª—ã. –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ö–û–î —Ñ–∏–ª—å–º–∞."
            );
        } else {
            const channelsList = requiredChannels
                .map((channel) =>
                    channel.startsWith("@")
                        ? `‚û°Ô∏è [${channel}](https://t.me/${channel.slice(1)})`
                        : `‚û°Ô∏è [–ö–∞–Ω–∞–ª](https://t.me/c/${channel.slice(4)})`
                )
                .join("\n");
            ctx.replyWithMarkdown(
                `–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n${channelsList}\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏ /start —Å–Ω–æ–≤–∞.`
            );
        }
    });


// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("text", async (ctx) => {
    const userId = ctx.from.id;
    const isSubscribed = await checkSubscription(ctx, userId);

    if (!isSubscribed) {
        ctx.reply("–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ /start.");
        return;
    }

        const code = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const movie = await Movie.findOne({ code });

    if (movie) {
        ctx.reply(
            `üé¨ *–ù–∞–∑–≤–∞–Ω–∏–µ*: ${movie.title}\nüìÖ *–ì–æ–¥*: ${movie.year}\nüé≠ *–ñ–∞–Ω—Ä*: ${movie.genre}`,
            { parse_mode: "Markdown" }
        );
    } else {
        ctx.reply("‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
});

// –§–∏–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
const PORT = process.env.PORT || 3001; // Render –ø–µ—Ä–µ–¥–∞—ë—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
http.createServer((req, res) => {
    res.writeHead(200, { "Content-Type": "text/plain" });
    res.end("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"); // –í—ã–≤–æ–¥–∏–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
}).listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});



const ADMIN_ID = 6764836918;
const admin_bot = new Telegraf("7441122720:AAHQMtph0L6zRqeRCJBp9vulcRtvjV6cDr8"); // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

const userStates = {};

admin_bot.command("add_movie", (ctx) => {
    if (ctx.from.id !== ADMIN_ID) {
        return ctx.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStates[ctx.from.id] = { step: "waiting_for_code" };
    ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –Ω–æ–≤–æ–≥–æ —Ñ–∏–ª—å–º–∞:");
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
admin_bot.on("text", async (ctx) => {
    const userId = ctx.from.id;
    const userText = ctx.message.text.trim();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
    if (!userStates[userId]) {
        return ctx.reply(
            "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞. –í–≤–µ–¥–∏—Ç–µ /add_movie."
        );
    }

    const userState = userStates[userId];

    if (userState.step === "waiting_for_code") {
        if (Movie[userText]) {
            return ctx.reply(
                "‚ùå –¢–∞–∫–æ–π –∫–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫–æ–¥:"
            );
        }
        userStates[userId] = {
            step: "waiting_for_title",
            newMovie: { code: userText },
        };
        return ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞:");
    }

    if (userState.step === "waiting_for_title") {
        userState.newMovie.title = userText;
        userState.step = "waiting_for_year";
        return ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞:");
    }

    if (userState.step === "waiting_for_year") {
        if (!/^\d{4}$/.test(userText)) {
            return ctx.reply(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ (4 —Ü–∏—Ñ—Ä—ã):"
            );
        }
        userState.newMovie.year = userText;
        userState.step = "waiting_for_genre";
        return ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞:");
    }

    if (userState.step === "waiting_for_genre") {
        userState.newMovie.genre = userText;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å–º
        const { code, title, year, genre } = userState.newMovie;
        Movie[code] = `${title} (${year}), –ñ–∞–Ω—Ä: ${genre}`;
        const movie = new Movie({ code, title, year, genre });
        await movie.save();
        // saveMovies();

        // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–∞–º—è—Ç–∏
        delete userStates[userId];

        return ctx.reply(`‚úÖ –§–∏–ª—å–º "${title}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!`);
    }
});


admin_bot.launch();
console.log("üöÄ –ê–¥–º–∏–Ω-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω");

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
bot.launch();