require("dotenv").config();
const { Telegraf, Markup } = require("telegraf");
const fs = require("fs");
const http = require("http");
const Movie = require("./models/Movie");

// –¢–æ–∫–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–ª—å–º—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// let movies = {};
// try {
//     movies = JSON.parse(fs.readFileSync('./movies.json', 'utf8'));
// } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã —Ñ–∏–ª—å–º–æ–≤:', error);
// }

// –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
// bot.command("start", (ctx) => {
//     ctx.reply(
//         "–ü—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–∞–Ω–∞–ª—ã. –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ö–û–î —Ñ–∏–ª—å–º–∞."
//     );
// });

// –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É

// bot.on("text", async (ctx) => {
//     const code = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–¥

//     const movie = await Movie.findOne({ code });

//     if (movie) {
//         ctx.reply(
//             `üé¨ *–ù–∞–∑–≤–∞–Ω–∏–µ*: ${movie.title}\nüìÖ *–ì–æ–¥*: ${movie.year}\nüé≠ *–ñ–∞–Ω—Ä*: ${movie.genre}`,
//             { parse_mode: "Markdown" }
//         );
//     } else {
//         ctx.reply("‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.");
//     }
// });

// bot.on('text', (ctx) => {
//     const userInput = ctx.message.text.trim();

//     // Check if the input is a numeric code
//     if (/^\d+$/.test(userInput)) {
//         const code = userInput;
//         if (movies[code]) {
//             ctx.reply(`–§–∏–ª—å–º –ø–æ –∫–æ–¥—É ${userInput}: ${movies[code]}`);
//         } else {
//             ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
//         }
//     } else {
//         ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞.');
//     }
// });

// bot.command('search', (ctx) => {
//     const code = ctx.message.text.split(' ')[1]; // –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ –≤–∏–¥–µ /search <–∫–æ–¥>
//     if (movies[code]) {
//         ctx.reply(`–ù–∞–π–¥–µ–Ω —Ñ–∏–ª—å–º: ${movies[code]}`);
//     } else {
//         ctx.reply('–§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.');
//     }
// });

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (—Ñ–∏–∫—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞)
const requiredChannels = ["@best_films077"]; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã

async function checkSubscription(ctx, userId) {
    for (let channel of requiredChannels) {
        try {
            const chatMember = await ctx.telegram.getChatMember(
                channel,
                userId
            );
            if (
                chatMember.status !== "member" &&
                chatMember.status !== "administrator" &&
                chatMember.status !== "creator"
            ) {
                return false; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            }
        } catch (error) {
            console.error(
                `–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª ${channel}:`,
                error.message
            );
            return false; // –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        }
    }
    return true; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
}


bot.start(async (ctx) => {
        const userId = ctx.from.id;
        const isSubscribed = await checkSubscription(ctx, userId);
    
        if (isSubscribed) {
            ctx.reply(
                "–ü—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–∞–Ω–∞–ª—ã. –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ö–û–î —Ñ–∏–ª—å–º–∞."
            );
        } else {
            const channelsList = requiredChannels
                .map((channel) =>
                    channel.startsWith("@")
                        ? `‚û°Ô∏è [${channel}](https://t.me/${channel.slice(1)})`
                        : `‚û°Ô∏è [–ö–∞–Ω–∞–ª](https://t.me/c/${channel.slice(4)})`
                )
                .join("\n");
            ctx.replyWithMarkdown(
                `–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n${channelsList}\n\n–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏ /start —Å–Ω–æ–≤–∞.`
            );
        }
    });


// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("text", async (ctx) => {
    const userId = ctx.from.id;
    const isSubscribed = await checkSubscription(ctx, userId);

    if (!isSubscribed) {
        ctx.reply("–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ /start.");
        return;
    }

        const code = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const movie = await Movie.findOne({ code });

    if (movie) {
        ctx.reply(
            `üé¨ *–ù–∞–∑–≤–∞–Ω–∏–µ*: ${movie.title}\nüìÖ *–ì–æ–¥*: ${movie.year}\nüé≠ *–ñ–∞–Ω—Ä*: ${movie.genre}`,
            { parse_mode: "Markdown" }
        );
    } else {
        ctx.reply("‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
});

// –§–∏–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
const PORT = process.env.PORT || 3000; // Render –ø–µ—Ä–µ–¥–∞—ë—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
http.createServer((req, res) => {
    res.writeHead(200, { "Content-Type": "text/plain" });
    res.end("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"); // –í—ã–≤–æ–¥–∏–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
}).listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

        // const movie = movie[userCode]; // –ò—â–µ–º —Ñ–∏–ª—å–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

        // if (movie) {
        //     ctx.replyWithMarkdownV2(`–§–∏–ª—å–º –ø–æ –∫–æ–¥—É ${userCode}:\n${movie}`); // –ï—Å–ª–∏ —Ñ–∏–ª—å–º –Ω–∞–π–¥–µ–Ω
        // } else {
        //     ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."); // –ï—Å–ª–∏ —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω
        // }

    // });

// bot.command('check_subscription', (ctx) => {
//     const userId = ctx.from.id;
//     const hasSubscribed = true; // –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ API Telegram
//     if (hasSubscribed) {
//         ctx.reply('–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!');
//     } else {
//         ctx.reply('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å!');
//     }
// });

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
bot.launch();
